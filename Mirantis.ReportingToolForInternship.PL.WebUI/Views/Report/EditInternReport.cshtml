@using Mirantis.ReportingToolForInternship.PL.WebUI.Models.Repositories
@model Mirantis.ReportingToolForInternship.PL.WebUI.Models.ReportVM

@{
    ViewBag.Title = "Edit Intern Report";
}

<h2>Edit intern's report</h2>

<form class="form-horizontal">
    <hr />

    <div id="MessageAboutStatusReport">
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.InternName, htmlAttributes: new { @class = "control-label col-xs-2" })
        <div class="col-xs-10">
            <select name="InternName" id="InternName" class="selectpicker">
                @foreach (var user in UserRepo.Repo)
                {
                    if (Model.InternName == user.Name)
                    {
                        <option value="@user.Name" selected>
                            @string.Format("{0} - {1}", user.Name, user.Email)
                        </option>
                    }
                    else
                    {
                        <option value="@user.Name">
                            @string.Format("{0} - {1}", user.Name, user.Email)
                        </option>
                    }
                }
            </select>
            @Html.ValidationMessageFor(model => model.InternName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TypeOccuring, htmlAttributes: new { @class = "control-label col-xs-2" })
        <div class="col-xs-10">
            <select name="TypeOccuring" id="TypeOccuring" class="selectpicker">
                @foreach (var type in TypeOccuringRepo.ReportsTypes)
                {
                    if (Model.TypeOccuring == type)
                    {
                        <option value="@type" selected>
                            @string.Format("{0}", type)
                        </option>
                    }
                    else
                    {
                        <option value="@type">
                            @string.Format("{0}", type)
                        </option>
                    }
                }
            </select>
            @Html.ValidationMessageFor(model => model, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-xs-2" })
        <div class="col-xs-10">
            <div class='input-group date'>
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "text", @readonly = "true", @value = Model.Date } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-5 col-md-offset-2">
            <strong>Activities</strong>
        </div>
        <div class="col-xs-5">
            <strong class="strong-question">Questions about activities</strong>
        </div>
    </div>


    @for (int i = 0; i < Model.Activities.Count; i++)
    {
        var activity = Model.Activities[i];
        if (i < Model.Activities.Count - 1)
        {
            <div class="form-group">
                <div class="col-xs-5 col-md-offset-2">
                    <div class="col-xs-10">
                        <input class="form-control text-box single-line input-activity" value="@activity.Description" />
                    </div>
                    <div class="col-xs-2">
                        <input type="button" value="–" class="btn btn-default btn-remover pull-right" />
                    </div>
                </div>
                <div class="col-xs-5">
                    @for (int j = 0; j < activity.Questions.Count; j++)
                    {
                        var question = activity.Questions[j];
                        if (j < activity.Questions.Count - 1)
                        {
                            <div class="form-group">
                                <div class="col-xs-10">
                                    <input type="text" class="form-control text-box single-line input-question" value="@question.Description" />
                                </div>
                                <div class="col-xs-2">
                                    <input type="button" value="–" class="btn btn-default btn-remover pull-right" />
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <div class="col-xs-10">
                                    <input type="text" class="form-control text-box single-line input-question" value="@question.Description" />
                                </div>
                                <div class="col-xs-2">
                                    <input type="button" value="+" class="btn btn-default btn-add-question pull-right" />
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        }
        else
        {
            <div class="form-group" id="WrapperOnActivityInputAndQuestionInput">
                <div class="col-xs-5 col-md-offset-2">
                    <div class="col-xs-10" id="WrapperOnActivityInput">
                        <input class="form-control text-box single-line input-activity" id="ActivityInput" value="@activity.Description" />
                    </div>
                    <div class="col-xs-2">
                        <input type="button" value="+" class="btn btn-default btn-add-activity pull-right" id="AddActivityButton" />
                    </div>
                </div>
                <div class="col-xs-5">
                    @for (int j = 0; j < activity.Questions.Count; j++)
                    {
                        var question = activity.Questions[j];
                        if (j < activity.Questions.Count - 1)
                        {
                            <div class="form-group">
                                <div class="col-xs-10">
                                    <input type="text" class="form-control text-box single-line input-question" value="@question.Description" />
                                </div>
                                <div class="col-xs-2">
                                    <input type="button" value="–" class="btn btn-default btn-remover pull-right" />
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="form-group">
                                <div class="col-xs-10">
                                    <input type="text" class="form-control text-box single-line input-question" value="@question.Description" id="QuestionInput" />
                                </div>
                                <div class="col-xs-2">
                                    <input type="button" value="+" class="btn btn-default btn-add-question pull-right" />
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        }
    }


    <div class="form-group">
        <div class="col-xs-10 col-md-offset-2">
            <strong>Future plans</strong>
        </div>
    </div>

    @for (int i = 0; i < Model.FuturePlans.Count; i++)
    {
        var futurePlan = Model.FuturePlans[i];
        if (i < Model.FuturePlans.Count - 1)
        {
            <div class="form-group">
                <div class="col-xs-9 col-md-offset-2">
                    <input class="form-control text-box single-line input-future-plan" value="@futurePlan.Description" />
                </div>
                <div class="col-xs-1">
                    <input type="button" value="–" class="btn btn-default btn-remover pull-right" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group" id="WrapperInputFuturePlan">
                <div class="col-xs-9 col-md-offset-2">
                    <input class="form-control text-box single-line input-future-plan" id="FuturePlanInput" value="@futurePlan.Description"/>
                </div>
                <div class="col-xs-1">
                    <input type="button" value="+" class="btn btn-default pull-right" id="AddFuturePlanButton" />
                </div>
            </div>
        }
    }

    <div class="form-group">
        <div class="col-xs-10 col-md-offset-2">
            <input type="button" value="Remain as draft" class="btn btn-default" id="RemainAsDraftButton" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-10 col-md-offset-2">
            <input type="button" value="Change on final version" class="btn btn-default" id="ChangeOnFinalVersionButton" />
        </div>
    </div>
</form>

@section scripts {
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script src="~/Scripts/Custom/addActivityInInternsReport.js"></script>
    <script src="~/Scripts/Custom/addFuturePlanInReport.js"></script>
    <script src="~/Scripts/Custom/addQuestionInReport.js"></script>
    <script src="~/Scripts/Custom/constructors.js"></script>
    <script src="~/Scripts/Custom/sendInternsReportForEditing.js"></script>
    <script src="~/Scripts/Custom/refreshRemoverButtons.js"></script>
    <script src="~/Scripts/Custom/enableDatePicker.js"></script>
    <script src="~/Scripts/Custom/changeRulesValidation.js"></script>
}