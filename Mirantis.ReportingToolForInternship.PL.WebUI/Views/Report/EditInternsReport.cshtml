@using Mirantis.ReportingToolForInternship.PL.WebUI.Models.Repositories
@model Mirantis.ReportingToolForInternship.PL.WebUI.Models.ReportVM

@{
    ViewBag.Title = "Edit intern's Report";
}

<h2>Edit intern's report</h2>

<form class="form-horizontal">
    <hr />

    <div id="MessageAboutSuccessOperation">
    </div>

    <div id="LoadingStatus" class="text-center">
        <img src="~/Images/loading.gif" />
    </div>

    <input type="hidden" value="@Model.Id" id="ReportId">
    <input type="hidden" value="@Model.InternsId" id="InternsId">

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-xs-2" })
        <div class="col-xs-10">
            @Html.EditorFor(model => model.Title, new
            {
                htmlAttributes = new
                {
                    @class = "form-control",
                    @type = "text",
                    @value = Model.Title,
                    @data_toggle = "tooltip",
                    @data_placement = "bottom",
                    @title = Model.Title
                }
            })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TypeOccuring, htmlAttributes: new { @class = "control-label col-xs-2" })
        <div class="col-xs-10">
            <select name="TypeOccuring" id="TypeOccuring" class="selectpicker">
                @foreach (var type in TypeOccuringRepo.ReportsTypes)
                {
                    if (Model.TypeOccuring == type)
                    {
                        <option value="@type" selected>
                            @string.Format("{0}", type)
                        </option>
                    }
                    else
                    {
                        <option value="@type">
                            @string.Format("{0}", type)
                        </option>
                    }
                }
            </select>
            @Html.ValidationMessageFor(model => model, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-xs-2" })
        <div class="col-xs-10">
            <div class='input-group date'>
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "text", @readonly = "true", @value = Model.Date } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-5 col-md-offset-2">
            <strong>Activities :</strong>
        </div>
        <div class="col-xs-5">
            <strong>Questions about activities :</strong>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-10 col-md-offset-2">
            @Html.ValidationMessageFor(model => model.Activities, "", new { @class = "text-danger" })
        </div>
    </div>

    @foreach (var activity in Model.Activities)
    {
        <div class="form-group activity">
            <div class="col-xs-5 col-md-offset-2">
                <div class="row">
                    <div class="col-xs-9">
                        <input type="hidden" value="@activity.Id" class="activityId">
                        <input type="text" class="form-control text-box single-line input-activity"
                               data-toggle="tooltip" data-placement="bottom"
                               title="@activity.Description" value="@activity.Description" />
                    </div>
                    <div class="col-xs-3">
                        <input type="button" value="–" class="btn btn-default pull-right btn-remover-activity" />
                        <input type="button" value="+" class="btn btn-default pull-right btn-adder-activity" />
                    </div>
                </div>
            </div>
            <div class="col-xs-5 composition">
                @if (activity.Questions.Any())
                {
                    foreach (var question in activity.Questions)
                    {
                        <div class="form-group">
                            <div class="col-xs-9">
                                <input type="hidden" value="@question.Id" class="questionId">
                                <input type="text" class="form-control text-box single-line input-question"
                                       data-toggle="tooltip" data-placement="bottom"
                                       title="@question.Description" value="@question.Description" />
                            </div>
                            <div class="col-xs-3">
                                <input type="button" value="–" class="btn btn-default pull-right btn-remover" />
                                <input type="button" value="+" class="btn btn-default pull-right btn-adder" />
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="form-group">
                        <div class="col-xs-9">
                            <input type="text" class="form-control text-box single-line input-question"
                                   data-toggle="tooltip" data-placement="bottom" />
                        </div>
                        <div class="col-xs-3">
                            <input type="button" value="–" class="btn btn-default pull-right btn-remover" />
                            <input type="button" value="+" class="btn btn-default pull-right btn-adder" />
                        </div>
                    </div>
                }
            </div>
            <div class="col-xs-10 col-md-offset-2">
                <span class="field-validation-valid text-danger" data-valmsg-for="Activity" data-valmsg-replace="true"></span>
            </div>
        </div>
    }


    <div class="form-group">
        <div class="col-xs-10 col-md-offset-2">
            <strong>Future plans :</strong>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-10 col-md-offset-2">
            @Html.ValidationMessageFor(model => model.FuturePlans, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="composition future-plans">
        @foreach (var futurePlan in Model.FuturePlans)
        {
            <div class="form-group">
                <div class="col-xs-8 col-md-offset-2">
                    <input type="hidden" value="@futurePlan.Id" class="futurePlanId">
                    <input type="text" class="form-control text-box single-line input-future-plan"
                           data-toggle="tooltip" data-placement="bottom"
                           title="@futurePlan.Description" value="@futurePlan.Description" />
                </div>
                <div class="col-xs-2">
                    <input type="button" value="–" class="btn btn-default pull-right btn-remover" />
                    <input type="button" value="+" class="btn btn-default pull-right btn-adder" />
                </div>
            </div>
        }
    </div>

    <div class="form-group">
        <div class="col-xs-10 col-md-offset-2">
            <input type="button" value="Save as draft" class="btn btn-default" id="SaveAsDraftButton" />
            <input type="button" value="Submit" class="btn btn-default" id="SubmitButton" />
        </div>
    </div>
</form>

<div id="MessageAboutUpload" class="modal fade" role="dialog" aria-labelledby="gridSystemModalLabel">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Are you sure that you want go out from this page?</h4>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                <button type="button" id="ConfirmRedirect" class="btn btn-primary">Yes</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/bootstrap-select.min.js"></script>

    <script src="~/Scripts/Custom/setSettingsTooltips.js"></script>
    <script src="~/Scripts/Custom/unloadFromPage.js"></script>
    <script src="~/Scripts/Custom/changeStatusLoadingIcon.js"></script>
    <script src="~/Scripts/Custom/validationRecord.js"></script>
    <script src="~/Scripts/Custom/clearInputs.js"></script>
    <script src="~/Scripts/Custom/disableInputs.js"></script>
    <script src="~/Scripts/Custom/changeRulesValidation.js"></script>
    <script src="~/Scripts/Custom/validationActivities.js"></script>
    <script src="~/Scripts/Custom/validationInternsActivities.js"></script>
    <script src="~/Scripts/Custom/validationFuturePlans.js"></script>
    <script src="~/Scripts/Custom/actionsAfterFail.js"></script>
    <script src="~/Scripts/Custom/actionsAfterSuccessfullChangeReport.js"></script>
    <script src="~/Scripts/Custom/assignEventsToRemoverButtons.js"></script>
    <script src="~/Scripts/Custom/assignEventsToRemoverActivityButtons.js"></script>
    <script src="~/Scripts/Custom/assignEventsToAdderButtons.js"></script>
    <script src="~/Scripts/Custom/assignEventsToAdderActivityButtons.js"></script>
    <script src="~/Scripts/Custom/constructors.js"></script>
    <script src="~/Scripts/Custom/constructReportBeforeSending.js"></script>
    <script src="~/Scripts/Custom/sendReport.js"></script>
    <script src="~/Scripts/Custom/sendInternsReportForEditing.js"></script>
    <script src="~/Scripts/Custom/setSettingsDatePickerOnEditingReportForm.js"></script>
}