@using Mirantis.ReportingTool.PL.WebUI.Models.Repositories;
@model Mirantis.ReportingTool.PL.WebUI.Models.TaskVM

@{
	ViewBag.Title = "Edit task";
	AjaxOptions ajaxOpts = new AjaxOptions
	{
		Url = Url.Action("EditTask"),
		HttpMethod = "post",
		OnSuccess = "redirect",
		OnBegin = "lockAllFunctions",
		OnComplete = "unlockAllFunctions",
		OnFailure = "unlockAllFunctions",
	};
}

<h2>Edit task</h2>

@using (Ajax.BeginForm("EditTask", null, ajaxOpts, new { @class = "form-horizontal" }))
{
	@Html.AntiForgeryToken()
	<hr />
	@Html.HiddenFor(model => model.Id)

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="form-group">
		@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-xs-2" })
		<div class="col-xs-10">
			@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @data_toggle = "tooltip", @data_placement = "bottom", @value = Model.Title } })
			@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-xs-2" })
		<div class="col-xs-10">
			@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @rows = 10, @value = Model.Description } })
			@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.ProjectId, htmlAttributes: new { @class = "control-label col-xs-2" })
		<div class="col-xs-10">
			<select name="ProjectId" id="ProjectId" class="selectpicker" data-live-search="true" data-size="5">
				@foreach (var item in ProjectLogicProvider.ProjectLogic.GetAll())
				{
					if (item.Id == Model.ProjectId)
					{
						<option selected value="@item.Id">
							@string.Format("{0} - {1}", item.Name, item.Customer)
						</option>
					}
					else
					{
						<option value="@item.Id">
							@string.Format("{0} - {1}", item.Name, item.Customer)
						</option>
					}
				}
			</select>
			@Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.AssigneeId, htmlAttributes: new { @class = "control-label col-xs-2" })
		<div class="col-xs-10">
			<select name="AssigneeId" id="AssigneeId" class="selectpicker" data-live-search="true" data-size="5">
				@foreach (var item in UserLogicProvider.UserLogic.GetAll())
				{
					if (item.Id == Model?.Assignee.Id)
					{
						<option selected value="@item.Id">
							@string.Format("{0} - {1}", item.FullName, item.Login)
						</option>
					}
					else
					{
						<option value="@item.Id">
							@string.Format("{0} - {1}", item.FullName, item.Login)
						</option>
					}
				}
			</select>
			@Html.ValidationMessageFor(model => model.AssigneeId, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-xs-2" })
		<div class="col-xs-10">
			<select name="Status" id="Status" class="selectpicker" data-live-search="true" data-size="5">
				@foreach (var item in StatusRepo.TaskTypes)
				{
					if (item == Model.Status)
					{
						<option selected value="@item">@item</option>
					}
					else
					{
						<option value="@item">@item</option>
					}
				}
			</select>
			@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		<div class="col-xs-10 col-md-offset-2">
			<input type="submit" value="Save" class="btn btn-default" id="SubmitButton" />
		</div>
	</div>
}

@section scripts {
	<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
	<script src="~/Scripts/bootstrap-select.min.js"></script>
	<script src="~/Scripts/jquery.validate.js"></script>
	<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
	<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

	<script src="~/Scripts/Custom/disableInputs.js"></script>
	<script src="~/Scripts/Custom/redirect.js"></script>
}