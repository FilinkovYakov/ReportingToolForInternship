//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResult", Namespace="http://schemas.datacontract.org/2004/07/InternshipAuthenticationService.Models.Op" +
        "erationResult")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResultOfUser))]
    public partial class OperationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationErrors[] ErrorsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationErrors[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultOfUser", Namespace="http://schemas.datacontract.org/2004/07/InternshipAuthenticationService.Models.Op" +
        "erationResult")]
    [System.SerializableAttribute()]
    public partial class OperationResultOfUser : Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationErrors", Namespace="http://schemas.datacontract.org/2004/07/InternshipAuthenticationService.Models.Op" +
        "erationResult")]
    public enum OperationErrors : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutorizationFiledErr = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NullErr = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LoginErr = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullNameErr = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RoleErr = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PassErr = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserExistErr = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserNotExistErr = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UsersNotExistErr = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/InternshipAuthenticationService.Models.Se" +
        "rviceModels")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.Role[] RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.Role[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/InternshipAuthenticationService.Models.Se" +
        "rviceModels")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidRoleFault", Namespace="http://schemas.datacontract.org/2004/07/InternshipAuthenticationService.Models.Fa" +
        "ults")]
    [System.SerializableAttribute()]
    public partial class InvalidRoleFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthenticationService.IAuthenticationService")]
    public interface IAuthenticationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/AuthorizationUser", ReplyAction="http://tempuri.org/IAuthenticationService/AuthorizationUserResponse")]
        Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResultOfUser AuthorizationUser(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/AuthorizationUser", ReplyAction="http://tempuri.org/IAuthenticationService/AuthorizationUserResponse")]
        System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResultOfUser> AuthorizationUserAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/CreateUser", ReplyAction="http://tempuri.org/IAuthenticationService/CreateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.InvalidRoleFault), Action="http://tempuri.org/IAuthenticationService/CreateUserInvalidRoleFaultFault", Name="InvalidRoleFault", Namespace="http://schemas.datacontract.org/2004/07/InternshipAuthenticationService.Models.Fa" +
            "ults")]
        Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult CreateUser(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/CreateUser", ReplyAction="http://tempuri.org/IAuthenticationService/CreateUserResponse")]
        System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult> CreateUserAsync(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UpdateUser", ReplyAction="http://tempuri.org/IAuthenticationService/UpdateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.InvalidRoleFault), Action="http://tempuri.org/IAuthenticationService/UpdateUserInvalidRoleFaultFault", Name="InvalidRoleFault", Namespace="http://schemas.datacontract.org/2004/07/InternshipAuthenticationService.Models.Fa" +
            "ults")]
        Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult UpdateUser(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/UpdateUser", ReplyAction="http://tempuri.org/IAuthenticationService/UpdateUserResponse")]
        System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult> UpdateUserAsync(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ChangePassword", ReplyAction="http://tempuri.org/IAuthenticationService/ChangePasswordResponse")]
        Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult ChangePassword(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ChangePassword", ReplyAction="http://tempuri.org/IAuthenticationService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult> ChangePasswordAsync(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/DeleteUser", ReplyAction="http://tempuri.org/IAuthenticationService/DeleteUserResponse")]
        Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult DeleteUser(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/DeleteUser", ReplyAction="http://tempuri.org/IAuthenticationService/DeleteUserResponse")]
        System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult> DeleteUserAsync(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/SearchUser", ReplyAction="http://tempuri.org/IAuthenticationService/SearchUserResponse")]
        Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User[] SearchUser(string login, string fullName, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/SearchUser", ReplyAction="http://tempuri.org/IAuthenticationService/SearchUserResponse")]
        System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User[]> SearchUserAsync(string login, string fullName, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetAll", ReplyAction="http://tempuri.org/IAuthenticationService/GetAllResponse")]
        Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetAll", ReplyAction="http://tempuri.org/IAuthenticationService/GetAllResponse")]
        System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/AddRole", ReplyAction="http://tempuri.org/IAuthenticationService/AddRoleResponse")]
        Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult AddRole(string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/AddRole", ReplyAction="http://tempuri.org/IAuthenticationService/AddRoleResponse")]
        System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult> AddRoleAsync(string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetAllRoles", ReplyAction="http://tempuri.org/IAuthenticationService/GetAllRolesResponse")]
        Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.Role[] GetAllRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetAllRoles", ReplyAction="http://tempuri.org/IAuthenticationService/GetAllRolesResponse")]
        System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.Role[]> GetAllRolesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationServiceChannel : Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.IAuthenticationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServiceClient : System.ServiceModel.ClientBase<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.IAuthenticationService>, Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.IAuthenticationService {
        
        public AuthenticationServiceClient() {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResultOfUser AuthorizationUser(string login, string password) {
            return base.Channel.AuthorizationUser(login, password);
        }
        
        public System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResultOfUser> AuthorizationUserAsync(string login, string password) {
            return base.Channel.AuthorizationUserAsync(login, password);
        }
        
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult CreateUser(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user, string password) {
            return base.Channel.CreateUser(user, password);
        }
        
        public System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult> CreateUserAsync(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user, string password) {
            return base.Channel.CreateUserAsync(user, password);
        }
        
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult UpdateUser(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult> UpdateUserAsync(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult ChangePassword(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user, string password) {
            return base.Channel.ChangePassword(user, password);
        }
        
        public System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult> ChangePasswordAsync(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user, string password) {
            return base.Channel.ChangePasswordAsync(user, password);
        }
        
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult DeleteUser(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult> DeleteUserAsync(Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User[] SearchUser(string login, string fullName, string role) {
            return base.Channel.SearchUser(login, fullName, role);
        }
        
        public System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User[]> SearchUserAsync(string login, string fullName, string role) {
            return base.Channel.SearchUserAsync(login, fullName, role);
        }
        
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.User[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult AddRole(string roleName) {
            return base.Channel.AddRole(roleName);
        }
        
        public System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.OperationResult> AddRoleAsync(string roleName) {
            return base.Channel.AddRoleAsync(roleName);
        }
        
        public Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.Role[] GetAllRoles() {
            return base.Channel.GetAllRoles();
        }
        
        public System.Threading.Tasks.Task<Mirantis.ReportingTool.DAL.DataAccessService.AuthenticationService.Role[]> GetAllRolesAsync() {
            return base.Channel.GetAllRolesAsync();
        }
    }
}
